{
    "appid": "3e27d34d-ceca-4c31-91b6-bafd717acd94",
    "name": "Exabeam Advanced Analytics",
    "description": "This app supports getting user and asset data as well as managing watchlists",
    "type": "identity management",
    "product_vendor": "Exabeam",
    "logo": "logo_exabeamadvancedanalytics.svg",
    "logo_dark": "logo_exabeamadvancedanalytics_dark.svg",
    "product_name": "Advanced Analytics",
    "product_version_regex": ".*",
    "publisher": "Splunk Community",
    "copyright": "Copyright (c) 2022 Splunk Inc.",
    "app_version": "1.1.0",
    "utctime_updated": "2017-12-08T22:20:05.684198Z",
    "package_name": "phantom_exabeamadvancedanalytics",
    "python_version": "2.7",
    "main_module": "exabeamadvancedanalytics_connector.py",
    "min_phantom_version": "5.1.0",
    "fips_compliant": false,
    "app_wizard_version": "1.0.0",
    "configuration": {
        "base_url": {
            "description": "URL",
            "data_type": "string",
            "required": true,
            "default": "https://exabeam.example.com:8484/api",
            "order": 0
        },
        "verify_server_cert": {
            "description": "Verify server certificate",
            "data_type": "boolean",
            "default": true,
            "order": 1
        },
        "username": {
            "description": "Username",
            "data_type": "string",
            "required": true,
            "order": 2
        },
        "password": {
            "description": "Password",
            "data_type": "password",
            "required": true,
            "order": 3
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "search assets",
            "identifier": "search_assets",
            "description": "Search for assets that contain the keyword specified",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "keyword": {
                    "description": "Keyword to search",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "limit": {
                    "description": "Maximum number of results",
                    "data_type": "numeric",
                    "default": "100",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.keyword",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.assets.*.assetGroup",
                    "data_type": "string",
                    "column_name": "Asset Group",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.assets.*.assetType",
                    "data_type": "string",
                    "column_name": "Asset Type",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.assets.*.hostName",
                    "data_type": "string",
                    "contains": [
                        "host name"
                    ],
                    "column_name": "Hostname",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.assets.*.ipAddress",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ],
                    "column_name": "IP",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.assets.*.riskSession",
                    "data_type": "string",
                    "column_name": "Risk Session",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.assets.*.riskState",
                    "data_type": "string",
                    "column_name": "Risk State",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get asset",
            "identifier": "get_asset",
            "description": "Retrieve all asset info for the a given hostname or IP address",
            "verbose": "One of <b>hostname</b> or <b>IP address</b> are required. If both are specified, only <b>hostname</b> is used.",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "hostname": {
                    "description": "Hostname to fetch",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "host name"
                    ],
                    "order": 0
                },
                "ip": {
                    "description": "IP to fetch",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ],
                    "order": 1,
                    "primary": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.hostname",
                    "data_type": "string",
                    "contains": [
                        "host name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.ip",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.data.*.assets.*.assetGroup",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.assets.*.assetType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.assets.*.hostName",
                    "data_type": "string",
                    "contains": [
                        "host name"
                    ],
                    "column_name": "Hostname",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.assets.*.ipAddress",
                    "data_type": "string",
                    "contains": [
                        "ip"
                    ],
                    "column_name": "IP",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.assets.*.riskSession",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.assets.*.riskState",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.commentCount",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.labels.*.label",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.location",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.confidenceFactor",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topGroups.groupingFeatureValue",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.hist.binList",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.hist.maxX",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.hist.maxY",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topGroups.hist.minX",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.hist.minY",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topGroups.hist.topTalkers.*.topTalker",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.histClassName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.histSpan",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.histogramDate",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.key",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.lastUpdate",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topGroups.modelName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.riskRegions.maxX",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topGroups.riskRegions.minX",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topGroups.riskRegions.riskRegions",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.smoothedHist.binList",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.smoothedHist.maxX",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.smoothedHist.maxY",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topGroups.smoothedHist.minX",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.smoothedHist.minY",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topGroups.smoothedHist.topTalkers.*.topTalker",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topGroups.totalBinCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topGroups.totalCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topUsers.confidenceFactor",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topUsers.groupingFeatureValue",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.hist.binList",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.hist.maxX",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.hist.maxY",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topUsers.hist.minX",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.hist.minY",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topUsers.hist.topTalkers.*.topTalker",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.histClassName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.histSpan",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.histogramDate",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.key",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.lastUpdate",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topUsers.modelName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.riskRegions.maxX",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topUsers.riskRegions.minX",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topUsers.riskRegions.riskRegions",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.smoothedHist.binList",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.smoothedHist.maxX",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.smoothedHist.maxY",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topUsers.smoothedHist.minX",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.smoothedHist.minY",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topUsers.smoothedHist.topTalkers.*.topTalker",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.topUsers.totalBinCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.topUsers.totalCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.zone",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get user",
            "identifier": "get_user",
            "description": "Retrieve all user info for the given username",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "username": {
                    "description": "Username to fetch",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "user name"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.accountNames.*.accountName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.commentCount",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.executive",
                    "data_type": "boolean",
                    "column_name": "Executive",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.managerInfo.averageRiskScore",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.firstSeen",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.labels.*.label",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.lastActivityTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.lastActivityType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.lastSeen",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.lastSessionId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.pastScores",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.pendingRiskTransfers.*.ruleId.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.pendingRiskTransfers.*.score",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.pendingRiskTransfers.*.sourceEventId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.pendingRiskTransfers.*.sourceSequenceId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.pendingRiskTransfers.*.sourceSequenceName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.pendingRiskTransfers.*.time",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.riskScore",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.managerInfo.username",
                    "data_type": "string",
                    "column_name": "Manager Username",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.onWatchlist",
                    "data_type": "boolean",
                    "column_name": "On Watchlist",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.peerGroupFieldName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.peerGroupFieldValue",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.userInfo.averageRiskScore",
                    "data_type": "numeric",
                    "column_name": "Avg Risk Score",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.userInfo.firstSeen",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.userInfo.labels.*.label",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.userInfo.lastActivityTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.userInfo.lastActivityType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.userInfo.lastSeen",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.userInfo.lastSessionId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.userInfo.pastScores",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.userInfo.pendingRiskTransfers.*.ruleId.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.userInfo.pendingRiskTransfers.*.score",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.userInfo.pendingRiskTransfers.*.sourceEventId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.userInfo.pendingRiskTransfers.*.sourceSequenceId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.userInfo.pendingRiskTransfers.*.sourceSequenceName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.userInfo.pendingRiskTransfers.*.time",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.userInfo.riskScore",
                    "data_type": "numeric",
                    "column_name": "Risk Score",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.userInfo.username",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.username",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "search users",
            "identifier": "search_users",
            "description": "Search for users that contain the keyword specified",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "keyword": {
                    "description": "Keyword to search",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "limit": {
                    "description": "Maximum number of results",
                    "data_type": "numeric",
                    "default": "100",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.keyword",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.averageRiskScore",
                    "data_type": "numeric",
                    "column_name": "Avg Risk Score",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.users.*.firstSeen",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.labels.*.label",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.lastActivityTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.lastActivityType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.lastSeen",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.lastSessionId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.pastScores",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.pendingRiskTransfers.*.ruleId.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.pendingRiskTransfers.*.score",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.pendingRiskTransfers.*.sourceEventId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.pendingRiskTransfers.*.sourceSequenceId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.pendingRiskTransfers.*.sourceSequenceName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.pendingRiskTransfers.*.time",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.riskScore",
                    "data_type": "numeric",
                    "column_name": "Risk Score",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.users.*.username",
                    "data_type": "string",
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get watchlist",
            "identifier": "get_watchlist",
            "description": "Get members of a watchlist",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "watchlist_id": {
                    "description": "Watchlist to retrieve",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "exabeam watchlist id"
                    ],
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.watchlist_id",
                    "data_type": "string",
                    "contains": [
                        "exabeam watchlist id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.criteria.*.value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.numberOfNotableUsers",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.outOfBox",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.title",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.totalNumberOfUsers",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.averageRiskScore",
                    "data_type": "numeric",
                    "column_name": "Avg Risk Score",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.users.*.user.executive",
                    "data_type": "boolean",
                    "column_name": "Executive",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.users.*.user.firstSeen",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.initials",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.labels.*.label",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.lastActivityTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.lastActivityType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.lastSeen",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.lastSessionId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestSessionComment.commentId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestSessionComment.commentObjectId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestSessionComment.commentType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestSessionComment.createTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestSessionComment.edited",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestSessionComment.exaUser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestSessionComment.text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestSessionComment.updateTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestUserComment.commentId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestUserComment.commentObjectId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestUserComment.commentType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestUserComment.createTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestUserComment.edited",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestUserComment.exaUser",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestUserComment.text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.latestUserComment.updateTime",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.pastScores",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.pendingRiskTransfers.*.ruleId.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.pendingRiskTransfers.*.score",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.pendingRiskTransfers.*.sourceEventId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.pendingRiskTransfers.*.sourceSequenceId",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.pendingRiskTransfers.*.sourceSequenceName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.pendingRiskTransfers.*.time",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.users.*.user.riskScore",
                    "data_type": "numeric",
                    "column_name": "Risk Score",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.users.*.user.username",
                    "data_type": "string",
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.users.*.username",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list watchlists",
            "identifier": "list_watchlists",
            "description": "Retrieve all watchlists and watchlist ids",
            "type": "investigate",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data.*.watchlists.*.title",
                    "data_type": "string",
                    "column_name": "Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.watchlists.*.watchlistId",
                    "data_type": "string",
                    "contains": [
                        "exabeam watchlist id"
                    ],
                    "column_name": "ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unwatch user",
            "identifier": "unwatch_user",
            "description": "Remove user from specified watchlist",
            "type": "contain",
            "read_only": false,
            "undo": "watch user",
            "parameters": {
                "username": {
                    "description": "User to remove",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "user name"
                    ],
                    "order": 0
                },
                "watchlist_id": {
                    "description": "Watchlist to change",
                    "data_type": "string",
                    "required": true,
                    "contains": [
                        "exabeam watchlist id"
                    ],
                    "order": 1,
                    "primary": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.watchlist_id",
                    "data_type": "string",
                    "contains": [
                        "exabeam watchlist id"
                    ],
                    "column_name": "Watchlist ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.success",
                    "data_type": "boolean",
                    "column_name": "Success",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.username",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.watchlistId",
                    "data_type": "string",
                    "contains": [
                        "exabeam watchlist id"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "watch user",
            "identifier": "watch_user",
            "description": "Add user to specified watchlist",
            "type": "correct",
            "read_only": false,
            "undo": "unwatch user",
            "parameters": {
                "username": {
                    "description": "User to add",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "user name"
                    ],
                    "order": 0
                },
                "watchlist_id": {
                    "description": "Watchlist to change",
                    "data_type": "string",
                    "required": true,
                    "contains": [
                        "exabeam watchlist id"
                    ],
                    "order": 1,
                    "primary": true
                },
                "duration": {
                    "description": "Number of days to watch",
                    "data_type": "numeric",
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.duration",
                    "data_type": "numeric",
                    "column_name": "Duration",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.username",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.watchlist_id",
                    "data_type": "string",
                    "contains": [
                        "exabeam watchlist id"
                    ],
                    "column_name": "Watchlist ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.success",
                    "data_type": "boolean",
                    "column_name": "Success",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.username",
                    "data_type": "string",
                    "contains": [
                        "user name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.watchlistId",
                    "data_type": "string",
                    "contains": [
                        "exabeam watchlist id"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/py2/beautifulsoup4-4.9.1-py2-none-any.whl"
            },
            {
                "module": "certifi",
                "input_file": "wheels/shared/certifi-2021.10.8-py2.py3-none-any.whl"
            },
            {
                "module": "chardet",
                "input_file": "wheels/shared/chardet-3.0.4-py2.py3-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/shared/idna-2.10-py2.py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/shared/requests-2.25.0-py2.py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/shared/soupsieve-1.9.6-py2.py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/shared/urllib3-1.26.9-py2.py3-none-any.whl"
            }
        ]
    }
}
